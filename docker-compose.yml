version: "3"

volumes:
  dbdata:

networks:
  frontend-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.10.1.0/24
  backend-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.10.2.0/23

services:
  db:
    build: ./db
    container_name: mysql-db
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - 3306:3306

    #Se define una IP est치tica para acceder a la base de datos (db), en la red 'backend' previamente establecida
    networks:
      backend-network:
        ipv4_address: 172.10.3.2
    
    environment:
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_USER=${MYSQL_USER}   
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}


    #Se asocia carpeta 'mysql' de container -> carpeta dentro de Docker-Engine
    volumes:
      - dbdata:/var/lib/mysql

  #Se define un servicio como webserver (ws)
  ws:
    build: ./ws
    container_name: php-ws

    #Se asocia carpeta 'src' de host -> carpeta 'html' dentro del container 'apache-php'
    volumes:
      - ./src:/var/www/html

    env_file:
      - .env

    ports:
      - 8080:80

    #Se define una IP est치tica, 2 redes, sino el container no lograr치 establecer conexi칩n con 'mysql'
    networks:
      backend-network:
        ipv4_address: 172.10.2.2
      frontend-network:
        ipv4_address: 172.10.1.2

    depends_on:
      - db
